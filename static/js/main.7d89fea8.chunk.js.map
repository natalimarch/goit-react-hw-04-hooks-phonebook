{"version":3,"sources":["components/Phonebook/Phonebook.module.css","components/Filter/Filter.module.css","components/Form/Form.module.css","components/ContactsList/ContactsList.jsx","components/Phonebook/formData.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Phonebook/initialState.js","components/Phonebook/Phonebook.jsx","App.js","index.js","components/ContactsList/ContactsList.module.css"],"names":["module","exports","ContactsList","list","onDelete","AddNewContacts","map","item","name","number","className","styles","Item","Text","Btn","type","onClick","id","List","FormData","pattern","title","Form","onSubmit","useState","state","setState","nameInputIdRef","useRef","generate","numberInputIdRef","handleChange","target","value","reset","e","preventDefault","FormContainer","Name","Label","htmlFor","current","Input","required","onChange","Tel","NameBtn","Filter","initialState","Phonebook","contacts","setContacts","filter","setFilter","useEffect","JSON","parse","localStorage","getItem","length","setItem","stringify","Contacts","FilterLowerCase","toLowerCase","includes","filterInput","container","Title","isAvailableName","find","contact","isAvailableNumber","alert","prevState","newContacts","push","idx","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d89fea8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__Yb216\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Filter_Input__20k7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Form_Label__3QBfK\",\"Form\":\"Form_Form__2boAo\",\"Input\":\"Form_Input__1kIqz\",\"NameBtn\":\"Form_NameBtn__1jr4a\"};","import React from \"react\";\nimport styles from \"./ContactsList.module.css\";\n\nconst ContactsList = ({ list, onDelete }) => {\n  const AddNewContacts = list.map((item) => {\n    const { name, number } = item;\n    return (\n      <li key={item.id} className={styles.Item}>\n        <p className={styles.Text}>\n          {name} {number}\n        </p>\n        <button\n          className={styles.Btn}\n          type=\"button\"\n          onClick={() => onDelete(item.id)}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n  return (\n    <>\n      <ul className={styles.List}>{AddNewContacts}</ul>\n    </>\n  );\n};\n\nexport default ContactsList;\n","const FormData = {\n  name: {\n    type: \"text\",\n    name: \"name\",\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n  },\n  number: {\n    type: \"tel\",\n    name: \"number\",\n    pattern:\n      \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n    title:\n      \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\n  },\n};\n\nexport default FormData;\n","import React, { useRef } from \"react\";\nimport { generate } from \"shortid\";\nimport { useState } from \"react\";\nimport styles from \"./Form.module.css\";\nimport FormData from \"../Phonebook/formData\";\n\nconst Form = ({ onSubmit }) => {\n  const [state, setState] = useState({ name: \"\", number: \"\" });\n\n  const nameInputIdRef = useRef(generate());\n  const numberInputIdRef = useRef(generate());\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit();\n    reset();\n  };\n\n  const reset = () => {\n    setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  return (\n    <form className={styles.Form} onSubmit={handleSubmit}>\n      <div className={styles.FormContainer}>\n        <div className={styles.Name}>\n          <label className={styles.Label} htmlFor={nameInputIdRef.current}>\n            Name\n            <input\n              {...FormData.name}\n              className={styles.Input}\n              required\n              value={state.name}\n              onChange={handleChange}\n              id={nameInputIdRef.current}\n            />\n          </label>\n        </div>\n        <div className={styles.Tel}>\n          <label className={styles.Label} htmlFor={numberInputIdRef.current}>\n            Number\n            <input\n              {...FormData.number}\n              className={styles.Input}\n              required\n              value={state.number}\n              onChange={handleChange}\n              id={numberInputIdRef.current}\n            />\n          </label>\n        </div>\n        <button type=\"submit\" className={styles.NameBtn}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n// class Form extends Component {\n//   state = {\n//     name: \"\",\n//     number: \"\",\n//   };\n\n//   nameInputId = generate();\n//   numberInputId = generate();\n\n//   handleChange = (e) => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     this.props.onSubmit(this.state);\n//     this.reset();\n//   };\n\n//   reset = () => {\n//     this.setState({\n//       name: \"\",\n//       number: \"\",\n//     });\n//   };\n\n//   render() {\n//     const { name, number } = this.state;\n//     const { handleSubmit, handleChange } = this;\n//     return (\n//       <form className={styles.Form} onSubmit={handleSubmit}>\n//         <div className={styles.FormContainer}>\n//           <div className={styles.Name}>\n//             <label className={styles.Label} htmlFor={this.nameInputId}>\n//               Name\n//               <input\n//                 {...FormData.name}\n//                 className={styles.Input}\n//                 required\n//                 value={name}\n//                 onChange={handleChange}\n//                 id={this.nameInputId}\n//               />\n//             </label>\n//           </div>\n//           <div className={styles.Tel}>\n//             <label className={styles.Label} htmlFor={this.numberInputId}>\n//               Number\n//               <input\n//                 {...FormData.number}\n//                 className={styles.Input}\n//                 required\n//                 value={number}\n//                 onChange={handleChange}\n//                 id={this.numberInputId}\n//               />\n//             </label>\n//           </div>\n//           <button type=\"submit\" className={styles.NameBtn}>\n//             Add contact\n//           </button>\n//         </div>\n//       </form>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ onChange, value }) => {\n  return (\n    <>\n      <input\n        className={styles.Input}\n        onChange={onChange}\n        value={value}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","export const initialState = {\n    contacts: [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ]\n}","import { useState, useEffect } from \"react\";\nimport styles from \"./Phonebook.module.css\";\nimport { generate } from \"shortid\";\nimport ContactsList from \"../ContactsList/ContactsList\";\nimport FormMain from \"../Form/Form\";\nimport Filter from \"../Filter/Filter\";\nimport { initialState } from \"./initialState\";\n\nconst Phonebook = () => {\n  const [contacts, setContacts] = useState(initialState.contacts);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n    if (contacts?.length) {\n      setContacts({\n        contacts,\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    const isAvailableName = contacts.find((contact) => contact.name === name);\n    const isAvailableNumber = contacts.find(\n      (contact) => contact.number === number\n    );\n    if (isAvailableName) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    if (isAvailableNumber) {\n      alert(`${number} is already in contacts`);\n      return;\n    }\n\n    setContacts((prevState) => {\n      const newContacts = [...prevState.contacts];\n      newContacts.push({ name, number, id: generate() });\n      return { contacts: newContacts };\n    });\n  };\n\n  // const handleChange = ({ target }) => {\n  //   const { name, value } = target;\n  //   setContacts({\n  //     [name]: value,\n  //   });\n  // };\n\n  const changeFilter = ({ target }) => {\n    const { name, value } = target;\n    setFilter({\n      [name]: value,\n    });\n  };\n\n  const filterInput = () => {\n    const FilterLowerCase = filter.toLowerCase();\n    return contacts.filter((item) =>\n      item?.name?.toLowerCase().includes(FilterLowerCase)\n    );\n  };\n\n  const onDelete = (idx) => {\n    setContacts(({ contacts }) => {\n      const deleteContact = contacts.filter((contact) => contact.id !== idx);\n      return { contacts: deleteContact };\n    });\n  };\n\n  const Contacts = filterInput();\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.Title}>Phonebook</h2>\n      <FormMain onSubmit={addContact} />\n      <h2 className={styles.Title}>Contacts</h2>\n      <Filter onChange={changeFilter} value={filter} />\n      <ContactsList list={Contacts} onDelete={onDelete} />\n    </div>\n  );\n};\n\nexport default Phonebook;\n\n// class Phonebook extends Component {\n//   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n//   componentDidMount() {\n//     const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n//     if (contacts?.length) {\n//       this.setState({\n//         contacts,\n//       });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState, snapshot) {\n//     if (\n//       JSON.stringify(prevState.contacts) !== JSON.stringify(this.state.contacts)\n//     ) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   addContact = ({ name, number }) => {\n//     const { contacts } = this.state;\n//     const isAvailableName = contacts.find((contact) => contact.name === name);\n//     const isAvailableNumber = contacts.find(\n//       (contact) => contact.number === number\n//     );\n//     if (isAvailableName) {\n//       alert(`${name} is already in contacts`);\n//     } else if (isAvailableNumber) {\n//       alert(`${number} is already in contacts`);\n//     } else {\n//       this.setState((prevState) => {\n//         const newContact = [...prevState.contacts];\n//         newContact.push({ name: name, number: number, id: generate() });\n//         return { contacts: newContact };\n//       });\n//     }\n//   };\n\n//   handleChange = (e) => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   filterInput = () => {\n//     const { contacts, filter } = this.state;\n//     const FilterLowerCase = filter.toLowerCase();\n//     return contacts.filter((item) =>\n//       item?.name?.toLowerCase().includes(FilterLowerCase)\n//     );\n//   };\n\n//   onDelete = (idx) => {\n//     this.setState(({ contacts }) => {\n//       const deleteContact = contacts.filter((contact) => contact.id !== idx);\n//       return { contacts: deleteContact };\n//     });\n//   };\n\n//   render() {\n//     const { filter } = this.state;\n//     const { handleChange, addContact, filterInput, onDelete } = this;\n//     const Contacts = filterInput();\n//     return (\n//       <div className={styles.container}>\n//         <h2 className={styles.Title}>Phonebook</h2>\n//         <FormMain onSubmit={addContact} />\n//         <h2 className={styles.Title}>Contacts</h2>\n//         <Filter onChange={handleChange} value={filter} />\n//         <ContactsList list={Contacts} onDelete={onDelete} />\n//       </div>\n//     );\n//   }\n// }\n","import './App.css';\nimport Phonebook from './components/Phonebook/Phonebook';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Phonebook />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"ContactsList_Item__3c0bw\",\"List\":\"ContactsList_List__1UAk9\",\"Text\":\"ContactsList_Text__2cDL5\",\"Btn\":\"ContactsList_Btn__GB_5Z\"};"],"sourceRoot":""}